{"version":3,"sources":["assets/js/main.js"],"names":["getExperience","dateString","age","yearString","now","Date","yearNow","getYear","monthNow","getMonth","dateNow","getDate","dob","substring","yearDob","monthDob","dateDob","ageString","yearAge","dateAge","monthAge","years","months","days","document","getElementById","innerText","showMenu","toggleId","navId","toggle","nav","addEventListener","classList","navLink","querySelectorAll","linkAction","remove","forEach","n","sections","scrollActive","scrollY","window","pageYOffset","current","sectionHeight","offsetHeight","sectionTop","offsetTop","sectionId","getAttribute","section","querySelector","add","scrollTop","themeButton","darkTheme","iconTheme","selectedTheme","localStorage","getItem","selectedIcon","getCurrentTheme","body","contains","getCurrentIcon","setItem","scaleCv","removeScale","areaCv","resumeButton","opt","margin","filename","image","type","quality","html2canvas","scale","jsPDF","format","orientation","generateResume","html2pdf","setTimeout"],"mappings":";AA6KA,IAAA,EAAA,KA5KMA,EAAgB,WACdC,IAcAC,EAEAC,EAfAC,EAAM,IAAIC,KAEVC,EAAUF,EAAIG,UACdC,EAAWJ,EAAIK,WACfC,EAAUN,EAAIO,UACdC,EAAM,IAAIP,KANG,aAOEQ,UAAU,EAAG,IAPf,aAQEA,UAAU,EAAG,GAAK,EARpB,aASEA,UAAU,EAAG,IAE5BC,EAAUF,EAAIL,UACdQ,EAAWH,EAAIH,WACfO,EAAUJ,EAAID,UAEdM,EAAY,GAGZC,EAAUZ,EAAUQ,EACpBK,EAAU,GACVC,EAAW,GAgCRH,OA9BHT,GAAYO,EAAUK,EAAWZ,EAAWO,GAE5CG,IACAE,EAAW,GAAKZ,EAAWO,GAG3BL,GAAWM,EAASG,EAAUT,EAAUM,GAGxCG,EAAU,GAAKT,EAAUM,IADzBI,EAGe,IACXA,EAAW,GACXF,MAURf,GANAD,EAAM,CACFmB,MAAOH,EACPI,OAAQF,EACRG,KAAMJ,IAGQE,MAAQ,EAAK,SAAW,QAG1CJ,EAAaf,EAAImB,MAAQ,GAAKnB,EAAIoB,OAAS,EACvCpB,EAAImB,MAAQlB,EAAa,QAAUD,EAAIoB,QAH5BpB,EAAIoB,OAAS,EAAK,UAAY,UAIvCpB,EAAImB,MAAQ,GAAmB,GAAdnB,EAAIoB,OAAepB,EAAImB,MAAQlB,EAAac,GAKvEO,SAASC,eAAe,oBAAoBC,UAAY1B,IAGxD,IAAM2B,EAAW,SAACC,EAAUC,GAClBC,IAAAA,EAASN,SAASC,eAAeG,GACnCG,EAAMP,SAASC,eAAeI,GAG9BC,GAAUC,GACVD,EAAOE,iBAAiB,QAAS,WAE7BD,EAAIE,UAAUH,OAAO,gBAIjCH,EAAS,aAAc,YAGvB,IAAMO,EAAUV,SAASW,iBAAiB,aAEpCC,EAAa,WACCZ,SAASC,eAAe,YAEhCQ,UAAUI,OAAO,cAE7BH,EAAQI,QAAQ,SAAAC,GAAKA,OAAAA,EAAEP,iBAAiB,QAASI,KAGjD,IAAMI,EAAWhB,SAASW,iBAAiB,eAErCM,EAAe,WACXC,IAAAA,EAAUC,OAAOC,YAEvBJ,EAASF,QAAQ,SAAAO,GACPC,IAAAA,EAAgBD,EAAQE,aACxBC,EAAaH,EAAQI,UAAY,GACjCC,EAAYL,EAAQM,aAAa,MACjCC,EAAU5B,SAAS6B,cAAc,qBAAuBH,EAAY,KAEzER,EAAUM,GAAcN,GAAWM,EAAaF,EAC7CM,EAAQnB,UAAUqB,IAAI,eAAiBF,EAAQnB,UAAUI,OAAO,kBAI5EM,OAAOX,iBAAiB,SAAUS,GAGlC,IAAMc,EAAY,WACRA,IAAAA,EAAY/B,SAASC,eAAe,cAEzC,EAAKiB,SAAW,IAAOa,EAAUtB,UAAUqB,IAAI,eAAiBC,EAAUtB,UAAUI,OAAO,gBAEhGM,OAAOX,iBAAiB,SAAUuB,GAGlC,IAAMC,EAAchC,SAASC,eAAe,gBACtCgC,EAAY,aACZC,EAAY,SAGZC,EAAgBC,aAAaC,QAAQ,kBACrCC,EAAeF,aAAaC,QAAQ,iBAGpCE,EAAkB,WAAMvC,OAAAA,SAASwC,KAAK/B,UAAUgC,SAASR,GAAa,OAAS,SAC/ES,EAAiB,WAAMV,OAAAA,EAAYvB,UAAUgC,SAASP,GAAa,UAAY,UAGjFC,IAEAnC,SAASwC,KAAK/B,UAA4B,SAAlB0B,EAA2B,MAAQ,UAAUF,GACrED,EAAYvB,UAA2B,YAAjB6B,EAA6B,MAAQ,UAAUJ,IAIzEF,EAAYxB,iBAAiB,QAAS,WAElCR,SAASwC,KAAK/B,UAAUH,OAAO2B,GAC/BD,EAAYvB,UAAUH,OAAO4B,GAE7BE,aAAaO,QAAQ,iBAAkBJ,KACvCH,aAAaO,QAAQ,gBAAiBD,OAI1C,IAAME,EAAU,WACZ5C,SAASwC,KAAK/B,UAAUqB,IAAI,aAI1Be,EAAc,WAChB7C,SAASwC,KAAK/B,UAAUI,OAAO,aAM7BiC,EAAS9C,SAASC,eAAe,WAEjC8C,EAAe/C,SAASC,eAAe,iBAGvC+C,EAAM,CACRC,OAAQ,EACRC,SAAU,0BACVC,MAAO,CAAEC,KAAM,OAAQC,QAAS,KAChCC,YAAa,CAAEC,MAAO,GACtBC,MAAO,CAAEC,OAAQ,KAAMC,YAAa,aAIlCC,EAAiB,WACnBC,SAASd,EAAQE,IAIrBD,EAAavC,iBAAiB,QAAS,WAGnCoC,IAGAe,IAGAE,WAAWhB,EAAa","file":"main.fe63b3c1.js","sourceRoot":"..\\src","sourcesContent":["/* PROFILE */\nconst getExperience = () => {\n    let dateString = \"01/06/2014\",\n        now = new Date(),\n        // today = new Date(now.getYear(), now.getMonth(), now.getDate()),\n        yearNow = now.getYear(),\n        monthNow = now.getMonth(),\n        dateNow = now.getDate(),\n        dob = new Date(\n            dateString.substring(6, 10),\n            dateString.substring(0, 2) - 1,\n            dateString.substring(3, 5)\n        ),\n        yearDob = dob.getYear(),\n        monthDob = dob.getMonth(),\n        dateDob = dob.getDate(),\n        age = {},\n        ageString = \"\",\n        yearString = \"\",\n        monthString = \"\",\n        yearAge = yearNow - yearDob;\n    let dateAge = '';\n    let monthAge = '';\n\n    if (monthNow >= monthDob) monthAge = monthNow - monthDob;\n    else {\n        yearAge--;\n        monthAge = 12 + monthNow - monthDob;\n    }\n\n    if (dateNow >= dateDob) dateAge = dateNow - dateDob;\n    else {\n        monthAge--;\n        dateAge = 31 + dateNow - dateDob;\n\n        if (monthAge < 0) {\n            monthAge = 11;\n            yearAge--;\n        }\n    }\n\n    age = {\n        years: yearAge,\n        months: monthAge,\n        days: dateAge,\n    };\n\n    yearString = (age.years > 1) ? \" years\" : \" year\";\n    monthString = (age.months > 1) ? \" months\" : \" month\";\n\n    ageString = (age.years > 0 && age.months > 0) ?\n        age.years + yearString + \" and \" + age.months + monthString :\n        ((age.years > 0 && age.months == 0) ? age.years + yearString : ageString);\n\n    return ageString;\n};\n\ndocument.getElementById('total-experience').innerText = getExperience();\n\n/* SHOW MENU */\nconst showMenu = (toggleId, navId) => {\n    const toggle = document.getElementById(toggleId),\n        nav = document.getElementById(navId);\n\n    /* Validate that variables exist */\n    if (toggle && nav) {\n        toggle.addEventListener('click', () => {\n            /* We add the show-menu class to the div tag with the nav__menu class */\n            nav.classList.toggle('show-menu');\n        });\n    }\n};\nshowMenu('nav-toggle', 'nav-menu');\n\n/* REMOVE MENU MOBILE */\nconst navLink = document.querySelectorAll('.nav_link');\n\nconst linkAction = () => {\n    const navMenu = document.getElementById('nav-menu');\n    /* When we click on each nav_link, we remove the show-menu class */\n    navMenu.classList.remove('show-menu');\n};\nnavLink.forEach(n => n.addEventListener('click', linkAction));\n\n/* SCROLL SECTIONS ACTIVE LINK */\nconst sections = document.querySelectorAll('section[id]');\n\nconst scrollActive = () => {\n    const scrollY = window.pageYOffset;\n\n    sections.forEach(current => {\n        const sectionHeight = current.offsetHeight;\n        const sectionTop = current.offsetTop - 50;\n        const sectionId = current.getAttribute('id');\n        const section = document.querySelector('.nav_menu a[href*=' + sectionId + ']');\n\n        (scrollY > sectionTop && scrollY <= sectionTop + sectionHeight) ?\n            section.classList.add('active-link') : section.classList.remove('active-link');\n\n    });\n};\nwindow.addEventListener('scroll', scrollActive);\n\n/* SHOW SCROLL TOP */\nconst scrollTop = () => {\n    const scrollTop = document.getElementById('scroll-top');\n    /* When the scroll is higher than 560 viewport height, add the show-scroll class to the a tag with the scroll-top class */\n    (this.scrollY >= 200) ? scrollTop.classList.add('show-scroll') : scrollTop.classList.remove('show-scroll');\n};\nwindow.addEventListener('scroll', scrollTop);\n\n/* DARK LIGHT THEME */\nconst themeButton = document.getElementById('theme-button');\nconst darkTheme = 'dark-theme';\nconst iconTheme = 'bx-sun';\n\n/* Previously selected topic (if user selected) */\nconst selectedTheme = localStorage.getItem('selected-theme');\nconst selectedIcon = localStorage.getItem('selected-icon');\n\n/* We obtain the current theme that the interface has by validating the dark-theme class */\nconst getCurrentTheme = () => document.body.classList.contains(darkTheme) ? 'dark' : 'light';\nconst getCurrentIcon = () => themeButton.classList.contains(iconTheme) ? 'bx-moon' : 'bx-sun';\n\n/* We validate if the user previously chose a topic */\nif (selectedTheme) {\n    /* If the validation is fulfilled, we ask what the issue was to know if we activated or deactivated the dark */\n    document.body.classList[selectedTheme === 'dark' ? 'add' : 'remove'](darkTheme);\n    themeButton.classList[selectedIcon === 'bx-moon' ? 'add' : 'remove'](iconTheme);\n}\n\n/* Activate / deactivate the theme manually with the button */\nthemeButton.addEventListener('click', () => {\n    /* Add or remove the dark / icon theme */\n    document.body.classList.toggle(darkTheme);\n    themeButton.classList.toggle(iconTheme);\n    /* We save the theme and the current icon that the user chose */\n    localStorage.setItem('selected-theme', getCurrentTheme());\n    localStorage.setItem('selected-icon', getCurrentIcon());\n});\n\n/* REDUCE THE SIZE AND PRINT ON AN A4 SHEET */\nconst scaleCv = () => {\n    document.body.classList.add('scale-cv');\n};\n\n/* REMOVE THE SIZE WHEN THE CV IS DOWNLOADED */\nconst removeScale = () => {\n    document.body.classList.remove('scale-cv');\n};\n\n/* GENERATE PDF */\n\n/* PDF generated area */\nconst areaCv = document.getElementById('area-cv');\n\nconst resumeButton = document.getElementById('resume-button');\n\n/* Html2pdf options */\nconst opt = {\n    margin: 0,\n    filename: 'Nilesh-Pawar-Resume.pdf',\n    image: { type: 'jpeg', quality: 0.98 },\n    html2canvas: { scale: 4 },\n    jsPDF: { format: 'a4', orientation: 'portrait' }\n};\n\n/* Function to call areaCv and Html2Pdf options */\nconst generateResume = () => {\n    html2pdf(areaCv, opt);\n};\n\n/* When the button is clicked, it executes the three functions */\nresumeButton.addEventListener('click', () => {\n\n    /* 1. The class .scale-cv is added to the body, where it reduces the size of the elements */\n    scaleCv();\n\n    /* 2. The PDF is generated */\n    generateResume();\n\n    /* 3. The .scale-cv class is removed from the body after 5 seconds to return to normal size. */\n    setTimeout(removeScale, 5000);\n});"]}